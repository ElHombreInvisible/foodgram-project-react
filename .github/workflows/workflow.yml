name: foodgram-deploy
on:
 push:
  branches: [ "master" ]
jobs:
  tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"
      - name: Install Test env and flake8
        run: |
          python -m pip install --upgrade pip
          pip install -r ./backend/requirements.txt
          pip install flake8 pep8-naming flake8-return flake8-isort
      - name: flake8 tests
        run: |
          cd backend/
          python -m flake8

  push_to_dockerhub:
    name: Build and push to docker hub
    runs-on: ubuntu-latest
    needs: tests 
    steps:
      - name: Check out the repo 
        uses: actions/checkout@v3
      - name: Set up Docker Buildx 
        uses: docker/setup-buildx-action@v1
      - name: Login to Docker 
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }} 
          password: ${{ secrets.DOCKERHUB_PASSWORD }} 
      - name: Build and push backend
        uses: docker/build-push-action@v4
        with:
          context: ./backend/
          dockerfile: ./backend/Dockerfile
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/foodgram:latest
      - name: Build and push frontend
        uses: docker/build-push-action@v4
        with:
          context: ./frontend/
          dockerfile: ./frontend/Dockerfile
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/foodfront:latest

  deploy:
    runs-on: ubuntu-latest
    needs: push_to_dockerhub
    steps:
      - name: executing remote ssh commands to deploy
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USER }}
          key: ${{ secrets.SSH_KEY }}
          script: |
            cd infra/
            sudo docker-compose stop
            sudo docker-compose rm -f backend
            sudo docker image rm elhombreinvisible/foodgram
            sudo rm .env
            touch .env
            echo DB_ENGINE=${{ secrets.DB_ENGINE }} >> .env
            echo DB_NAME=${{ secrets.DB_NAME }} >> .env
            echo POSTGRES_USER=${{ secrets.POSTGRES_USER }} >> .env
            echo POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }} >> .env
            echo DB_HOST=${{ secrets.DB_HOST }} >> .env
            echo DB_PORT=${{ secrets.DB_PORT }} >> .env
            sudo docker-compose up -d
            sudo docker exec -t infra_backend_1 python manage.py migrate
            sudo docker exec -t infra_backend_1 python manage.py ingredientsimport -p ./import/ingredients.json
            sudo docker exec -t infra_backend_1 python manage.py collectstatic --no-input

  send_message:
    runs-on: ubuntu-latest
    needs: deploy
    steps:
    - name: send message
      uses: appleboy/telegram-action@master
      with:
        to: ${{ secrets.TELEGRAM_TO }}
        token: ${{ secrets.TELEGRAM_TOKEN }}
        message: ${{ github.workflow }} успешно выполнен!
